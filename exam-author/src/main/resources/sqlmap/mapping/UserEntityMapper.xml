<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.system.business.mapper.UserEntityMapper">
  <resultMap id="BaseResultMap" type="com.exam.system.business.entity.UserEntity">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="user_psw" jdbcType="VARCHAR" property="userPsw" />
    <result column="cell_phone" jdbcType="VARCHAR" property="cellPhone" />
    <result column="is_lock" jdbcType="CHAR" property="isLock" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="modifior" jdbcType="BIGINT" property="modifior" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, real_name, login_name, nick_name, user_psw, cell_phone, is_lock, salt, creator, 
    creat_time, modifior, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.exam.system.business.entity.UserEntity">
    insert into t_user (user_id, real_name, login_name, 
      nick_name, user_psw, cell_phone, 
      is_lock, salt, creator, 
      creat_time, modifior, update_time
      )
    values (#{userId,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{userPsw,jdbcType=VARCHAR}, #{cellPhone,jdbcType=VARCHAR}, 
      #{isLock,jdbcType=CHAR}, #{salt,jdbcType=VARCHAR}, #{creator,jdbcType=BIGINT}, 
      #{creatTime,jdbcType=TIMESTAMP}, #{modifior,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.exam.system.business.entity.UserEntity">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="userPsw != null">
        user_psw,
      </if>
      <if test="cellPhone != null">
        cell_phone,
      </if>
      <if test="isLock != null">
        is_lock,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="modifior != null">
        modifior,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userPsw != null">
        #{userPsw,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null">
        #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="isLock != null">
        #{isLock,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifior != null">
        #{modifior,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.system.business.entity.UserEntity">
    update t_user
    <set>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userPsw != null">
        user_psw = #{userPsw,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null">
        cell_phone = #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="isLock != null">
        is_lock = #{isLock,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifior != null">
        modifior = #{modifior,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.system.business.entity.UserEntity">
    update t_user
    set real_name = #{realName,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_psw = #{userPsw,jdbcType=VARCHAR},
      cell_phone = #{cellPhone,jdbcType=VARCHAR},
      is_lock = #{isLock,jdbcType=CHAR},
      salt = #{salt,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=BIGINT},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      modifior = #{modifior,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>